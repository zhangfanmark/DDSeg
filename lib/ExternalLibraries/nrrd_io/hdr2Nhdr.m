function [fid] = hdr2Nhdr(hdr,mat,fn) 
% hdr an existing nrrd hdr with the same dimentions
% fn - the name of the file to be written (with no extension).
% mat - the data file

if ~isfield(hdr,'spaceorigin')
    hdr.spaceorigin = [-41.5,-41.5,-39];
end

fid = fopen([fn '.nhdr'], 'w');
[~, fn_short] = fileparts(fn);
fprintf(fid, ['NRRD0004\n' ...
                '# Complete NRRD file format specification at:\n' ...
                '# http://teem.sourceforge.net/nrrd/format.html\n' ...
                'type: double\n' ...
                'dimension: 3\n' ...
                'space: %s\n' ...
                'sizes: %d %d %d\n' ...
                'space directions: (%g,%g,%g) (%g,%g,%g) (%g,%g,%g)\n' ...
                'centerings: cell cell cell\n'...                
                'kinds: %s %s %s\n' ...
                'endian: little\n' ...
                'encoding: gzip\n' ...
                'space units: "mm" "mm" "mm"\n'...
                'space origin: (%g,%g,%g)\n' ...
                'measurement frame: (%g,%g,%g) (%g,%g,%g) (%g,%g,%g)\n'...
                'data file: %s.raw.gz\n'], ...
          hdr.space, hdr.sizes(1:3), hdr.spacedirections_matrix(:), char(hdr.kinds(1)),char(hdr.kinds(2)),char(hdr.kinds(3)), hdr.spaceorigin, hdr.measurementframe,fn_short ...
      );
  
fclose(fid);

fid = fopen([fn '.raw'], 'w');
fwrite(fid, mat, 'double');
fclose(fid);
system(['rm -f ' fn '.raw.gz && gzip ' fn '.raw']); % compress
  
